@using ScrumPoker.Models;
@using ScrumPoker.Services;
@using ScrumPoker.ViewModels.Poker;
@model PokerVm
@{
    ViewBag.Title = "Scrum Poker";
}
    @section scripts  {
        @Html.Partial("_ScrumPokerJs", Model)<br />
    }
@if (Model.ProjectId > 0)
{

    <div style="display:inline;">Project <h2 id="spnProjectName" style="display:inline;">@Html.DisplayFor(model => model.ProjectName)</h2></div>
     <h3 style="display:inline;">@Html.ActionLink(Url.Action("Vote", "Poker", new { @id = Model.ProjectId }, "http"), "Vote", "Poker", new { @id = Model.ProjectId })</h3>  
    using (Html.BeginForm("Vote", "Poker", FormMethod.Post))
    {
            <br />
            <div>
            <div>First Name*</div>

        @{
            object displayMode = new { id = "firstName", maxlength = "12", size = "12"/*, list = "users"*/ };
            if (!string.IsNullOrEmpty(Model.FirstName))
            {
                displayMode = new { id = "firstName", maxlength = "12", size = "12", /*list = "users",*/ disabled = "disabled" };
            }        
            @Html.TextBox("firstName", (string)ViewBag.FirstName, displayMode)
        }
@*        <datalist id="users">
            @foreach (var teamMember in Model.CurrentProject.TeamMembers)
            {
                <option>@teamMember.NickName</option>
            }
        </datalist>*@
        </div>
        <br /> 
        <div>
            <div style="display:inline;">Task Id </div>
            <h3 id="taskIdDisplay" style="display:inline;"></h3>
            @if (ScrumMasterSvc.IsScrumMaster(User.Identity.Name))
            {
                <div style="display:inline;">
                    <input id="taskId" type="text" />
                </div>
                <div style="display:inline;">
                    <input id="btnSetTaskId" type="button" value="Set Task Id" />
                </div>         
            }
        </div>
        <div>
        @Html.TextBox("estimate", (string)ViewBag.estimate, new { id = "estimate", @style = "width:35px; background-color:red;font-size: xx-large;", type = "number" })
        @Html.Hidden("projectid", Model.ProjectId)
        @{
            string disabled = Model.ProjectId > 0 ? "" : "disabled";
        <input id="SubmitVote" type="button" value="Vote" @disabled/>
        }
        @if (ScrumMasterSvc.IsScrumMaster(User.Identity.Name))
        {
               <div style="display:inline;">
                    <input id="btnSaveMyVote" type="button" value="Save My Vote" />
                </div>  
        }  
        </div>
        @Html.Partial("_UserVotes")     
    }
}
@Html.Partial("_UserList", Model)<br />
