@using ScrumPoker.Models;
@using ScrumPoker.Services;
@using ScrumPoker.ViewModels.Poker;
@model PokerVm
@{
    ViewBag.Title = "Scrum Poker";
}
@section scripts  {    
    @Html.Partial("_ScrumPokerJs", Model)<br />
}
@section styles{
    @Styles.Render("~/Content/poker")
}

@if (Model.ProjectId > 0)
{
    <div  class="displayGroup">Project <h2 id="spnProjectName"  class="displayGroup">@Html.DisplayFor(model => model.ProjectName)</h2></div>
     <h3>@Html.ActionLink(Url.Action("Vote", "Poker", new { @id = Model.ProjectId }, "http"), "Vote", "Poker", new { @id = Model.ProjectId })</h3>  
    using (Html.BeginForm("Vote", "Poker", FormMethod.Post))
    {
            <br />
            <div>
            <div>First Name*</div>

        @{
            object displayMode = new { id = "firstName", maxlength = "12", size = "12"/*, list = "users"*/ };
            if (!string.IsNullOrEmpty(Model.FirstName))
            {
                displayMode = new { id = "firstName", maxlength = "12", size = "12", /*list = "users",*/ disabled = "disabled" };
            }        
            @Html.TextBox("firstName", (string)ViewBag.FirstName, displayMode)
        }
        </div>
        <br /> 
        <div>
            <div class="displayGroup">Task Id </div>
            <h3 id="taskIdDisplay" class="displayGroup"></h3>
            @if (ScrumMasterSvc.IsScrumMaster(User.Identity.Name))
            {
                <div class="displayGroup">
                    <input id="taskId" type="text" />
                </div>
                <div class="displayGroup">
                    <input id="btnSetTaskId" type="button" value="Set Task Id" />
                </div>         
            }
        </div>
        <div>
            <div class="displayGroup">
                @Html.TextBox("estimate", (string)ViewBag.estimate, new { id = "estimate" })
            </div>
            <div id="votebutton"> 
                <div>
                    <input type="checkbox" id="chkUsePopup" checked="checked"   />   
                </div>
                <div>      
                    @{
                        string disabled = Model.ProjectId > 0 ? "" : "disabled";
                        <input id="SubmitVote" type="button" value="Vote" @disabled/>
                    }
                </div>
            </div>
                @if (ScrumMasterSvc.IsScrumMaster(User.Identity.Name))
                {
                       <div  class="displayGroup">
                            <input id="btnSaveMyVote" type="button" value="Save My Vote" />
                        </div>  
                }  
                @Html.Hidden("projectid", Model.ProjectId)
        </div>
        @Html.Partial("_UserVotes")     
    }
}
@Html.Partial("_UserList", Model)<br />
@Html.Partial("_FibonacciPopup", Model)

